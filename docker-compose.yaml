version: '3'
services:
  db:
    image: postgres:latest
    container_name: chichat-db
    user: root
    restart: always
    volumes:
      - ./db/init-tests-db.sql:/docker-entrypoint-initdb.d/init-tests-db.sql
      - ./.postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  backend:
    image: chichat-backend
    container_name: chichat-backend
    build: ./backend
    user: root
    depends_on:
      - db
      - adminer
    ports:
      - ${EXPRESS_PORT}:${EXPRESS_PORT}
      - ${PRISMA_STUDIO_PORT}:${PRISMA_STUDIO_PORT}
      - 9229:9229
    volumes:
      - ./backend:/usr/src/app
    environment:
      - NODE_ENV=${NODE_ENV}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - EXPRESS_PORT=${EXPRESS_PORT}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      - TEST_DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/test
      - BACKEND_PROTOCOL=${BACKEND_PROTOCOL}
      - BACKEND_HOST=${BACKEND_HOST}
      - BACKEND_DOMAIN=${BACKEND_DOMAIN}
      - FRONTEND_PROTOCOL=${FRONTEND_PROTOCOL}
      - FRONTEND_HOST=${FRONTEND_HOST}
      - FRONTEND_DOMAIN=${FRONTEND_DOMAIN}
      - REDIS_URL=redis://cache:6379
    env_file:
      - ./backend/.env

  frontend:
    image: chichat-frontend
    container_name: chichat-frontend
    build: ./frontend
    user: root
    ports:
      - ${NEXT_PORT}:${NEXT_PORT}
      - 9228:9229
    volumes:
      - ./frontend:/usr/src/app
    environment:
      - NODE_ENV=${NODE_ENV}
      - BACKEND_PROTOCOL=${BACKEND_PROTOCOL}
      - BACKEND_HOST=${BACKEND_HOST}
      - BACKEND_DOMAIN=${BACKEND_DOMAIN}
      - FRONTEND_PROTOCOL=${FRONTEND_PROTOCOL}
      - FRONTEND_HOST=${FRONTEND_HOST}
      - FRONTEND_DOMAIN=${FRONTEND_DOMAIN}

  adminer:
    image: adminer
    container_name: adminer
    ports: 
      - 8080:8080

  cache:
    image: redis:7.2.4
    container_name: chichat-cache
    restart: always
    volumes:
      - .cache:/data

  rediscommander:
    image: rediscommander/redis-commander:latest
    container_name: chichat-rediscommander
    restart: always
    ports:
      - 8081:8081
    environment:
      - PORT=8081
      - REDIS_HOST=cache
